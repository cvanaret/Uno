# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Unit tests on Ubuntu

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '*.cff'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '*.cff'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        architecture: [x64]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install googletest
      run: |
        sudo apt-get install -y libgtest-dev cmake
        mkdir -p $HOME/build
        cd $HOME/build
        sudo cmake /usr/src/googletest/googletest
        sudo make
        sudo cp lib/libgtest* /usr/lib/
        cd ..
        sudo rm -rf build
        sudo mkdir /usr/local/lib/googletest
        sudo ln -s /usr/lib/libgtest.a /usr/local/lib/googletest/libgtest.a
        sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/googletest/libgtest_main.a

    - name: Download dependencies (BQPD and MUMPS_static)
      shell: bash
      run: |
        VERSION_BQPD="1.0.0"
        VERSION_MUMPS="5.8.0"
        PLATFORM="x86_64-linux-gnu"
        wget https://github.com/leyffer/BQPD_jll.jl/releases/download/BQPD-v${VERSION_BQPD}%2B0/BQPD.v${VERSION_BQPD}.$PLATFORM-libgfortran5.tar.gz
        wget https://github.com/amontoison/MUMPS_static_jll.jl/releases/download/MUMPS_static-v${VERSION_MUMPS}%2B0/MUMPS_static.v${VERSION_MUMPS}.$PLATFORM-libgfortran5.tar.gz
        mkdir deps
        tar -xzvf BQPD.v${VERSION_BQPD}.$PLATFORM-libgfortran5.tar.gz -C deps
        tar -xzvf MUMPS_static.v${VERSION_MUMPS}.$PLATFORM-libgfortran5.tar.gz -C deps

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                                                -DMUMPS_INCLUDE_DIR=${{github.workspace}}/deps/include \
                                                -DMETIS_INCLUDE_DIR=${{github.workspace}}/deps/include \
                                                -DBQPD=${{github.workspace}}/deps/lib/libbqpd.a \
                                                -DMETIS_LIBRARY=${{github.workspace}}/deps/lib/libmetis.a \
                                                -DMUMPS_LIBRARY=${{github.workspace}}/deps/lib/libdmumps.a \
                                                -DMUMPS_COMMON_LIBRARY=${{github.workspace}}/deps/lib/libmumps_common.a \
                                                -DMUMPS_PORD_LIBRARY=${{github.workspace}}/deps/lib/libpord.a \
                                                -DMUMPS_MPISEQ_LIBRARY=${{github.workspace}}/deps/lib/libmpiseq.a \
                                                -DBLAS_LIBRARIES=${{github.workspace}}/deps/lib/libblas.a \
                                                -DLAPACK_LIBRARIES=${{github.workspace}}/deps/lib/liblapack.a

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --target run_unotest --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute unit tests
      run: ./run_unotest
