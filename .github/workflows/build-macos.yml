# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build on macOS

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '*.cff'
      - '*.options'
      - 'uno_ampl-completion.bash'
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        architecture: [x64, arm64]
        compiler: [gcc]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Fortran compiler
      uses: fortran-lang/setup-fortran@v1
      with:
          compiler: ${{matrix.compiler}}
    
    - name: Clean up FortranCInterface_VERIFY
      # FortranCInterface_VERIFY fails on macOS, but it's not actually needed for the current build
      run: sed -i".backup" 's/FortranCInterface_VERIFY(CXX)/# FortranCInterface_VERIFY(CXX)/g' ${{github.workspace}}/CMakeLists.txt
    
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_Fortran_COMPILER=${{env.FC}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
