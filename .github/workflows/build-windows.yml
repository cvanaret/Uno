# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build on Windows

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '*.cff'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '*.cff'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        architecture: [x64]
        compiler: [mingw]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download dependencies
      shell: bash
      run: |
        VERSION_BQPD="1.0.0"
        VERSION_MUMPS="5.8.0"
        VERSION_HIGHS="1.11.0"
        if [[ "${{matrix.architecture}}" == "x64" ]]; then
          PLATFORM="x86_64-w64-mingw32"
        else
          PLATFORM="i686-w64-mingw32"
        fi
        choco install wget
        wget https://github.com/leyffer/BQPD_jll.jl/releases/download/BQPD-v${VERSION_BQPD}%2B0/BQPD.v${VERSION_BQPD}.$PLATFORM-libgfortran5.tar.gz
        wget https://github.com/amontoison/MUMPS_static_jll.jl/releases/download/MUMPS_static-v${VERSION_MUMPS}%2B0/MUMPS_static.v${VERSION_MUMPS}.$PLATFORM-libgfortran5.tar.gz
        wget https://github.com/amontoison/HiGHS_static_jll.jl/releases/download/HiGHS_static-v${VERSION_HIGHS}%2B0/HiGHS_static.v${VERSION_HIGHS}.$PLATFORM-libgfortran5.tar.gz
        mkdir deps
        mkdir deps/highs
        tar -xzvf BQPD.v${VERSION_BQPD}.$PLATFORM-libgfortran5.tar.gz -C deps
        tar -xzvf MUMPS_static.v${VERSION_MUMPS}.$PLATFORM-libgfortran5.tar.gz -C deps
        tar -xzvf HiGHS_static.v${VERSION_HIGHS}.$PLATFORM-libgfortran5.tar.gz -C deps/highs

    - name: add MinGW64 directory to path
      run: echo "C:\tools\msys64\mingw64\bin" >> "$GITHUB_PATH"

    - name: add WORKSPACE directory to path
      run: echo "WORKSPACE=D:/a/Uno/Uno" >> "$GITHUB_PATH"

    - name: Configure CMake
      shell: bash
      run: |
        cmake -G "MinGW Makefiles" \
          -B "${WORKSPACE}/build" \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DMUMPS_INCLUDE_DIR="${WORKSPACE}/deps/include" \
          -DMETIS_INCLUDE_DIR="${WORKSPACE}/deps/include" \
          -DBQPD="${WORKSPACE}/deps/lib/libbqpd.a" \
          -DMETIS_LIBRARY="${WORKSPACE}/deps/lib/libmetis.a" \
          -DMUMPS_LIBRARY="${WORKSPACE}/deps/lib/libdmumps.a" \
          -DMUMPS_COMMON_LIBRARY="${WORKSPACE}/deps/lib/libmumps_common.a" \
          -DMUMPS_PORD_LIBRARY="${WORKSPACE}/deps/lib/libpord.a" \
          -DMUMPS_MPISEQ_LIBRARY="${WORKSPACE}/deps/lib/libmpiseq.a" \
          -DBLAS_LIBRARIES="${WORKSPACE}/deps/lib/libblas.a" \
          -DLAPACK_LIBRARIES="${WORKSPACE}/deps/lib/liblapack.a" \
          -DHIGHS_DIR="${WORKSPACE}/deps/highs/lib/cmake/highs" \
          -DBUILD_STATIC_LIBS=ON \
          -DBUILD_SHARED_LIBS=ON .

    - name: Build
      shell: bash
      # Build your program with the given configuration
      run: cmake --build ${WORKSPACE}/build --config ${{env.BUILD_TYPE}}
